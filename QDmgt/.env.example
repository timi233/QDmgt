# ============================================
# Channel Management System - Environment Configuration
# ============================================
# Copy this file to .env and update the values for your environment
# Never commit the actual .env file to version control!

# ============================================
# Application Settings
# ============================================
ENVIRONMENT=development
# Options: development, staging, production, testing
DEBUG=true
APP_NAME=Channel Management System
VERSION=0.1.0
API_V1_STR=/api/v1

# ============================================
# Server Configuration
# ============================================
HOST=0.0.0.0
PORT=8000
WORKERS=1

# ============================================
# Security Keys
# ============================================
# IMPORTANT: Change these in production! Use strong, random values.
# Generate using: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-secret-key-here-change-in-production
JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production

# ============================================
# Database Configuration
# ============================================
# SQLite (for development)
DATABASE_URL=sqlite:///./channel_management.db

# PostgreSQL (for production)
# DATABASE_URL=postgresql://username:password@localhost:5432/channel_management

# PostgreSQL connection details (alternative to DATABASE_URL)
# DB_POSTGRES_SERVER=localhost
# DB_POSTGRES_PORT=5432
# DB_POSTGRES_USER=postgres
# DB_POSTGRES_PASSWORD=your-password-here
# DB_POSTGRES_DB=channel_management

# ============================================
# Redis Configuration (Optional)
# ============================================
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_DB=0
# REDIS_PASSWORD=
# REDIS_URL=redis://localhost:6379/0

# ============================================
# JWT Token Configuration
# ============================================
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# ============================================
# Security Settings
# ============================================
# Password Policy
SECURITY_PASSWORD_MIN_LENGTH=8
SECURITY_PASSWORD_REQUIRE_UPPERCASE=true
SECURITY_PASSWORD_REQUIRE_LOWERCASE=true
SECURITY_PASSWORD_REQUIRE_DIGITS=true
SECURITY_PASSWORD_REQUIRE_SPECIAL_CHARS=true

# Rate Limiting
SECURITY_RATE_LIMIT_REQUESTS_PER_MINUTE=60
SECURITY_RATE_LIMIT_WINDOW_SECONDS=60

# Session Settings
SECURITY_SESSION_TIMEOUT_MINUTES=30
SECURITY_SESSION_INACTIVE_TIMEOUT_MINUTES=15

# CORS Settings (comma-separated list)
# SECURITY_ALLOWED_ORIGINS=http://localhost:3000,https://localhost:3000,http://127.0.0.1:3000

# CSRF Protection
SECURITY_CSRF_COOKIE_NAME=csrf_token
SECURITY_CSRF_HEADER_NAME=X-CSRF-Token

# ============================================
# Logging Configuration
# ============================================
LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
# LOG_FILE=logs/app.log
LOG_MAX_BYTES=10485760
LOG_BACKUP_COUNT=5

# ============================================
# Email Configuration (Optional)
# ============================================
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USERNAME=your-email@example.com
# EMAIL_PASSWORD=your-app-password
# EMAIL_USE_TLS=true

# ============================================
# Development/Testing Options
# ============================================
# Set to true to enable SQL query logging in DEBUG mode
# SQLALCHEMY_ECHO=false
